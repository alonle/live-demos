import org.eclipse.jetty.server.Handler;
import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.handler.DefaultHandler;
import org.eclipse.jetty.server.handler.HandlerList;
import org.eclipse.jetty.server.handler.ResourceHandler;

buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.eclipse.jetty:jetty-server:8.1.7.v20120910"
	}
}

apply plugin: "java"

repositories {
  ivy {
    name "ivy"
    url "http://localhost:8080/ivyrepo"
  }
  maven {
    name "maven"
    url "http://localhost:8080/mavenrepo"
  }
}

dependencies {
  compile "org.cachepolicy.foo:foo:latest.integration"
  compile "org.cachepolicy.bar:bar:1.0-SNAPSHOT"
  compile("org.cachepolicy.zoo:zoo:1.0") {
    changing = true
  }
  compile("org.cachepolicy.moo:moo:1.0")
}

configurations.all {
    resolutionStrategy {
//        cacheChangingModulesFor 1000, 'seconds'
//        cacheDynamicVersionsFor 24, 'hours'
    }
}

task startRepo(type: JettyStart) 

class JettyStart extends DefaultTask {
	@TaskAction
	def start() {
		 Server server = new Server(8080);
		 ResourceHandler resource_handler = new ResourceHandler();
		 resource_handler.setDirectoriesListed(true);
		 resource_handler.setResourceBase(project.projectDir.parent + "/producer/build");
		 
		 HandlerList handlers = new HandlerList();
		 handlers.setHandlers([resource_handler, new DefaultHandler()] as Handler[] );
		 server.setHandler(handlers);
		 
		 server.start();
	}
}


